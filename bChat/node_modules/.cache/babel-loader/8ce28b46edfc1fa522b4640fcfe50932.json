{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/javascript/bchat/src/Store.js\";\nimport React from 'react';\nimport io from 'socket.io-client';\nexport const CTX = React.createContext();\nconst initState = {\n  general: [{\n    from: 'swedish_scott',\n    msg: 'hello'\n  }, {\n    from: 'mo',\n    msg: 'hello'\n  }, {\n    from: 'fati',\n    msg: 'hello'\n  }],\n  topic2: [{\n    from: 'swedish_scott',\n    msg: 'hello'\n  }, {\n    from: 'swedish_scott',\n    msg: 'hello'\n  }, {\n    from: 'swedish_scott',\n    msg: 'hello'\n  }]\n};\n\nfunction reducer(state, action) {\n  const {\n    from,\n    msg,\n    topic\n  } = action.payload;\n\n  switch (action.type) {\n    case 'RECEIVE_MESSAGE':\n      return { ...state,\n        [topic]: [...state[topic], {\n          from,\n          msg\n        }]\n      };\n\n    default:\n      return state;\n  }\n}\n\nlet socket;\n\nfunction sendChatAction(value) {\n  socket.emit('chat message', value);\n}\n\nfunction Store(props) {\n  const [allChats, dispatch] = React.useReducer(reducer, initState);\n\n  if (!socket) {\n    socket = io(':3001');\n    socket.on('chat message', function (msg) {\n      //dispatch({type: 'RECEIVE_MESSAGE', payload: msg});\n      console.log({\n        msg\n      });\n    });\n  }\n\n  const user = 'swedish_scott' + Math.random(100).toFixed(2);\n  return React.createElement(CTX.Provider, {\n    value: {\n      allChats,\n      sendChatAction,\n      user\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, props.children);\n}\n\nexport default Store;","map":{"version":3,"sources":["/Users/apple/Desktop/javascript/bchat/src/Store.js"],"names":["React","io","CTX","createContext","initState","general","from","msg","topic2","reducer","state","action","topic","payload","type","socket","sendChatAction","value","emit","Store","props","allChats","dispatch","useReducer","on","console","log","user","Math","random","toFixed","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,aAAN,EAAZ;AAEP,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,CACL;AAACC,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GADK,EAEL;AAACD,IAAAA,IAAI,EAAE,IAAP;AAAaC,IAAAA,GAAG,EAAE;AAAlB,GAFK,EAGL;AAACD,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,GAAG,EAAE;AAApB,GAHK,CADK;AAMdC,EAAAA,MAAM,EAAE,CACJ;AAACF,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GADI,EAEJ;AAACD,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GAFI,EAGJ;AAACD,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GAHI;AANM,CAAlB;;AAYA,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,QAAM;AAACL,IAAAA,IAAD;AAAOC,IAAAA,GAAP;AAAYK,IAAAA;AAAZ,MAAqBD,MAAM,CAACE,OAAlC;;AACA,UAAOF,MAAM,CAACG,IAAd;AACI,SAAK,iBAAL;AACI,aAAO,EACF,GAAGJ,KADD;AAEF,SAACE,KAAD,GAAS,CACL,GAAGF,KAAK,CAACE,KAAD,CADH,EAEL;AACGN,UAAAA,IADH;AACSC,UAAAA;AADT,SAFK;AAFP,OAAP;;AASJ;AACI,aAAOG,KAAP;AAZR;AAcH;;AAED,IAAIK,MAAJ;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3BF,EAAAA,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BD,KAA5B;AACH;;AAED,SAASE,KAAT,CAAeC,KAAf,EAAsB;AAElB,QAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBtB,KAAK,CAACuB,UAAN,CAAiBd,OAAjB,EAA0BL,SAA1B,CAA7B;;AAEA,MAAI,CAACW,MAAL,EAAa;AACTA,IAAAA,MAAM,GAAGd,EAAE,CAAC,OAAD,CAAX;AACAc,IAAAA,MAAM,CAACS,EAAP,CAAU,cAAV,EAA0B,UAASjB,GAAT,EAAc;AACpC;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACnB,QAAAA;AAAD,OAAZ;AACH,KAHD;AAIH;;AAED,QAAMoB,IAAI,GAAG,kBAAkBC,IAAI,CAACC,MAAL,CAAY,GAAZ,EAAiBC,OAAjB,CAAyB,CAAzB,CAA/B;AAEA,SACI,oBAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAE;AAACT,MAAAA,QAAD;AAAWL,MAAAA,cAAX;AAA2BW,MAAAA;AAA3B,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACW,QADX,CADJ;AAKH;;AAED,eAAeZ,KAAf","sourcesContent":["import React from 'react'\nimport io from 'socket.io-client'\n\nexport const CTX = React.createContext();\n\nconst initState = {\n    general: [\n        {from: 'swedish_scott', msg: 'hello'},\n        {from: 'mo', msg: 'hello'},\n        {from: 'fati', msg: 'hello'},\n    ],\n    topic2: [\n        {from: 'swedish_scott', msg: 'hello'},\n        {from: 'swedish_scott', msg: 'hello'},\n        {from: 'swedish_scott', msg: 'hello'},\n    ]\n}\nfunction reducer(state, action) {\n    const {from, msg, topic} = action.payload;    \n    switch(action.type) {\n        case 'RECEIVE_MESSAGE': \n            return {\n                 ...state,\n                 [topic]: [\n                     ...state[topic],\n                     {\n                        from, msg\n                    }\n                 ]\n            }\n        default:\n            return state \n    }\n}\n\nlet socket;\n\nfunction sendChatAction(value) {\n    socket.emit('chat message', value);\n}\n\nfunction Store(props) {\n\n    const [allChats, dispatch] = React.useReducer(reducer, initState);\n    \n    if (!socket) {\n        socket = io(':3001');\n        socket.on('chat message', function(msg) {\n            //dispatch({type: 'RECEIVE_MESSAGE', payload: msg});\n            console.log({msg});\n        });\n    }\n\n    const user = 'swedish_scott' + Math.random(100).toFixed(2)\n\n    return (\n        <CTX.Provider value={{allChats, sendChatAction, user}}>\n            {props.children}\n        </CTX.Provider> \n    )\n}\n\nexport default Store\n "]},"metadata":{},"sourceType":"module"}