{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/javascript/bchat/src/Dashboard.js\";\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { CTX } from './Store';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '50px',\n    padding: theme.spacing(3, 2)\n  },\n  flex: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  topicsWindow: {\n    width: \"30%\",\n    height: \"300px\",\n    borderRight: \"1px solid grey\"\n  },\n  chatWindow: {\n    width: \"85%\",\n    padding: \"20px\"\n  },\n  chatBox: {\n    width: \"85%\"\n  },\n  button: {\n    width: \"15%\"\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n}));\n\nfunction Dashboard() {\n  const classes = useStyles(); //CTX store\n\n  const {\n    allChats,\n    sendChatAction,\n    user\n  } = React.useContext(CTX);\n  const topics = Object.keys(allChats); //local state\n\n  const [activeTopic, changeActiveTopic] = React.useState(topics[0]);\n  const [textValue, changeTextValue] = React.useState('');\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"This is a  sheet of paper\"), React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, activeTopic, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.topicsWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, topics.map(topic => React.createElement(ListItem, {\n    onClick: e => changeActiveTopic(e.target.innerText),\n    key: topic,\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: topic,\n    key: topic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: classes.chatWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, allChats[activeTopic].map((chat, i) => React.createElement(\"div\", {\n    className: classes.flex,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Chip, {\n    label: chat.from,\n    className: classes.chip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, chat.msg))))), React.createElement(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Send a msg\",\n    className: classes.chatBox,\n    value: textValue,\n    onChange: e => changeTextValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: () => {\n      sendChatAction({\n        from: user,\n        msg: textValue,\n        topic: activeTopic\n      });\n      changeTextValue('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Send\"))));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/apple/Desktop/javascript/bchat/src/Dashboard.js"],"names":["React","Paper","Typography","makeStyles","List","ListItem","ListItemText","Chip","Button","TextField","CTX","useStyles","theme","root","margin","padding","spacing","flex","display","alignItems","topicsWindow","width","height","borderRight","chatWindow","chatBox","button","bullet","transform","title","fontSize","pos","marginBottom","Dashboard","classes","allChats","sendChatAction","user","useContext","topics","Object","keys","activeTopic","changeActiveTopic","useState","textValue","changeTextValue","map","topic","e","target","innerText","chat","i","from","chip","msg","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {CTX} from './Store';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      margin: '50px', \n      padding: theme.spacing(3, 2),\n    },\n    flex: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    topicsWindow: {\n        width: \"30%\",\n        height: \"300px\",\n        borderRight: \"1px solid grey\",\n    },\n    chatWindow: {\n        width: \"85%\",\n        padding: \"20px\",\n    },\n    chatBox: {\n        width: \"85%\",\n    },\n    button: {\n        width: \"15%\",\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  }));\n\nfunction Dashboard() {\n    const classes = useStyles();\n\n    //CTX store\n    const {allChats, sendChatAction, user} = React.useContext(CTX);\n    const topics = Object.keys(allChats);\n\n    //local state\n    const [activeTopic, changeActiveTopic] = React.useState(topics[0]);\n    const [textValue, changeTextValue] = React.useState('');\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography variant=\"h4\" component=\"h4\">\n                This is a  sheet of paper\n                </Typography>\n                <Typography variant=\"h5\" component=\"h5\">\n                {activeTopic} \n                <br />\n                </Typography>\n                <div className={classes.flex}>\n                    <div className={classes.topicsWindow}>\n                        <List>\n                            {\n                                    topics.map(topic => (\n                                        <ListItem onClick={e => changeActiveTopic(e.target.innerText)} key={topic} button>\n                                            <ListItemText primary={topic} key={topic} />\n                                        </ListItem>\n                                ))\n                            }\n                        </List>\n                    </div>\n                    <div className={classes.chatWindow}>\n                        {\n                            allChats[activeTopic].map((chat, i) => (\n                                <div className={classes.flex} key={i}>\n                                    <Chip label={chat.from} className={classes.chip} />\n                                    <Typography variant=\"body1\" gutterBottom>{chat.msg}</Typography>\n                                </div> \n                            ))\n                        }\n                    </div>\n                </div>\n                <div className={classes.flex}>\n                    <TextField \n                        label=\"Send a msg\" \n                        className={classes.chatBox} \n                        value={textValue} \n                        onChange={e => changeTextValue(e.target.value)} /> \n                    <Button \n                        variant=\"contained\" \n                        color=\"primary\" \n                        className={classes.button} \n                        onClick={() => {\n                            sendChatAction({from: user, msg: textValue, topic: activeTopic});\n                            changeTextValue(''); \n                        }}      \n                    >\n                        Send\n                    </Button>\n                </div>\n            </Paper>\n        </div>\n    )\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}