{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/javascript/bchat/src/Dashboard.js\";\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { CTX } from './Store';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '50px',\n    padding: theme.spacing(3, 2),\n    minWidth: 275\n  },\n  flex: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  topicsWindow: {\n    width: \"30%\",\n    height: \"300px\",\n    borderRight: \"1px solid grey\"\n  },\n  chatWindow: {\n    width: \"85%\",\n    padding: \"20px\"\n  },\n  chatBox: {\n    width: \"85%\"\n  },\n  button: {\n    width: \"15%\"\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n}));\n\nfunction Dashboard() {\n  const classes = useStyles(); //CTX store\n\n  const [allChats] = React.useContext(CTX);\n  const topics = Object.keys(allChats); //local state\n\n  const [activeTopic, changeActiveTopic] = React.useState(topic[0]);\n  const [textValue, changeTextValue] = React.useState('');\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"This is a  sheet of paper\"), React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, activeTopic, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.topicsWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, ['topic'].map(topic => React.createElement(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    onClick: e => changeActiveTopic(e.target.innerText),\n    key: topic,\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    key: topic,\n    primary: \"Inbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })))))), React.createElement(\"div\", {\n    className: classes.chatWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, [{\n    from: 'user',\n    msg: 'hello'\n  }].map((chat, i) => React.createElement(\"div\", {\n    className: classes.flex,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Chip, {\n    label: chat.from,\n    className: classes.chip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, chat.msg))))), React.createElement(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Send a msg\",\n    className: classes.chatBox,\n    value: textValue,\n    onChange: e => changeTextValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Send\"))));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/apple/Desktop/javascript/bchat/src/Dashboard.js"],"names":["React","Paper","Typography","makeStyles","List","ListItem","ListItemIcon","ListItemText","Chip","Button","TextField","CTX","useStyles","theme","root","margin","padding","spacing","minWidth","flex","display","alignItems","topicsWindow","width","height","borderRight","chatWindow","chatBox","button","bullet","transform","title","fontSize","pos","marginBottom","Dashboard","classes","allChats","useContext","topics","Object","keys","activeTopic","changeActiveTopic","useState","topic","textValue","changeTextValue","map","e","target","innerText","from","msg","chat","i","chip","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {CTX} from './Store';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      margin: '50px', \n      padding: theme.spacing(3, 2),\n      minWidth: 275,\n    },\n    flex: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    topicsWindow: {\n        width: \"30%\",\n        height: \"300px\",\n        borderRight: \"1px solid grey\"\n    },\n    chatWindow: {\n        width: \"85%\",\n        padding: \"20px\"\n    },\n    chatBox: {\n        width: \"85%\"\n    },\n    button: {\n        width: \"15%\"\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  }));\n\nfunction Dashboard() {\n    const classes = useStyles();\n\n    //CTX store\n    const [allChats] = React.useContext(CTX);\n    const topics = Object.keys(allChats);\n\n    //local state\n    const [activeTopic, changeActiveTopic] = React.useState(topic[0]);\n    const [textValue, changeTextValue] = React.useState('');\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography variant=\"h4\" component=\"h4\">\n                This is a  sheet of paper\n                </Typography>\n                <Typography variant=\"h5\" component=\"h5\">\n                {activeTopic} \n                <br />\n                </Typography>\n                <div className={classes.flex}>\n                    <div className={classes.topicsWindow}>\n                        <List>\n                            {\n                                ['topic'].map(topic => (\n                                    <div className={classes.flex}>\n                                        <ListItem onClick={e => changeActiveTopic(e.target.innerText)} key={topic} button>\n                                            <ListItemText key={topic} primary=\"Inbox\" />\n                                        </ListItem>\n                                    </div>\n                                ))\n                            }\n                        </List>\n                    </div>\n                    <div className={classes.chatWindow}>\n                        {\n                            [{from: 'user', msg: 'hello'}].map((chat, i) => (\n                                <div className={classes.flex} key={i}>\n                                    <Chip label={chat.from} className={classes.chip} />\n                                    <Typography variant=\"body1\" gutterBottom>{chat.msg}</Typography>\n                                </div> \n                            ))\n                        }\n                    </div>\n                </div>\n                <div className={classes.flex}>\n                    <TextField label=\"Send a msg\" className={classes.chatBox} value={textValue} onChange={e => changeTextValue(e.target.value)} />\n                    <Button variant=\"contained\" color=\"primary\">\n                    Send\n                    </Button>\n                </div>\n            </Paper>\n        </div>\n    )\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}