{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/javascript/bchat/src/Store.js\";\nimport React from 'react';\nimport io from 'socket.io-client';\nexport const CTX = React.createContext();\nconst initState = {\n  general: [{\n    from: 'swedish_scott',\n    msg: 'hello'\n  }, {\n    from: 'swedish_scott',\n    msg: 'hello'\n  }, {\n    from: 'swedish_scott',\n    msg: 'hello'\n  }],\n  topic2: [{\n    from: 'swedish_scott',\n    msg: 'hello'\n  }, {\n    from: 'swedish_scott',\n    msg: 'hello'\n  }, {\n    from: 'swedish_scott',\n    msg: 'hello'\n  }]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'RECEIVE_MESSAGE':\n      return { ...state,\n        [action.payload.topic]: [...state[action.payload.topic], {\n          from: action.payload.from,\n          msg: action.payload.msg\n        }]\n      };\n\n    default:\n      return state;\n  }\n}\n\nlet socket;\n\nfunction sendChatAction(value) {\n  socket.emit('chat message', value);\n}\n\nfunction Store(props) {\n  if (!socket) {\n    socket = io(':3001');\n    socket.on('chat message', function (msg) {\n      $('#messages').append($('<li>').text(msg));\n    });\n  }\n\n  const user = 'mohammed' + Math.random(100).toFixed(2);\n  const [allChats] = React.useReducer(reducer, initState);\n  return React.createElement(CTX.Provider, {\n    value: {\n      allChats,\n      sendChatAction,\n      user\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, props.children);\n}\n\nexport default Store;","map":{"version":3,"sources":["/Users/apple/Desktop/javascript/bchat/src/Store.js"],"names":["React","io","CTX","createContext","initState","general","from","msg","topic2","reducer","state","action","type","payload","topic","socket","sendChatAction","value","emit","Store","props","on","$","append","text","user","Math","random","toFixed","allChats","useReducer","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,aAAN,EAAZ;AAEP,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,CACL;AAACC,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GADK,EAEL;AAACD,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GAFK,EAGL;AAACD,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GAHK,CADK;AAMdC,EAAAA,MAAM,EAAE,CACJ;AAACF,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GADI,EAEJ;AAACD,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GAFI,EAGJ;AAACD,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GAHI;AANM,CAAlB;;AAYA,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,iBAAL;AACI,aAAO,EACF,GAAGF,KADD;AAEF,SAACC,MAAM,CAACE,OAAP,CAAeC,KAAhB,GAAwB,CACpB,GAAGJ,KAAK,CAACC,MAAM,CAACE,OAAP,CAAeC,KAAhB,CADY,EAEpB;AACGR,UAAAA,IAAI,EAAEK,MAAM,CAACE,OAAP,CAAeP,IADxB;AAEGC,UAAAA,GAAG,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAFvB,SAFoB;AAFtB,OAAP;;AAUJ;AACI,aAAOG,KAAP;AAbR;AAeH;;AAED,IAAIK,MAAJ;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3BF,EAAAA,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BD,KAA5B;AACH;;AAED,SAASE,KAAT,CAAeC,KAAf,EAAsB;AAElB,MAAG,CAACL,MAAJ,EAAY;AACRA,IAAAA,MAAM,GAAGd,EAAE,CAAC,OAAD,CAAX;AACAc,IAAAA,MAAM,CAACM,EAAP,CAAU,cAAV,EAA0B,UAASd,GAAT,EAAc;AACpCe,MAAAA,CAAC,CAAC,WAAD,CAAD,CAAeC,MAAf,CAAsBD,CAAC,CAAC,MAAD,CAAD,CAAUE,IAAV,CAAejB,GAAf,CAAtB;AACH,KAFD;AAGH;;AAED,QAAMkB,IAAI,GAAG,aAAaC,IAAI,CAACC,MAAL,CAAY,GAAZ,EAAiBC,OAAjB,CAAyB,CAAzB,CAA1B;AACA,QAAM,CAACC,QAAD,IAAa7B,KAAK,CAAC8B,UAAN,CAAiBrB,OAAjB,EAA2BL,SAA3B,CAAnB;AAEA,SACI,oBAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAE;AAACyB,MAAAA,QAAD;AAAWb,MAAAA,cAAX;AAA2BS,MAAAA;AAA3B,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,KAAK,CAACW,QADX,CADJ;AAKH;;AAED,eAAeZ,KAAf","sourcesContent":["import React from 'react'\nimport io from 'socket.io-client'\n\nexport const CTX = React.createContext();\n\nconst initState = {\n    general: [\n        {from: 'swedish_scott', msg: 'hello'},\n        {from: 'swedish_scott', msg: 'hello'},\n        {from: 'swedish_scott', msg: 'hello'},\n    ],\n    topic2: [\n        {from: 'swedish_scott', msg: 'hello'},\n        {from: 'swedish_scott', msg: 'hello'},\n        {from: 'swedish_scott', msg: 'hello'},\n    ]\n}\nfunction reducer(state, action) {\n    switch(action.type) {\n        case 'RECEIVE_MESSAGE': \n            return {\n                 ...state,\n                 [action.payload.topic]: [\n                     ...state[action.payload.topic],\n                     {\n                        from: action.payload.from, \n                        msg: action.payload.msg\n                    }\n                 ]\n            }\n        default:\n            return state \n    }\n}\n\nlet socket;\n\nfunction sendChatAction(value) {\n    socket.emit('chat message', value);\n}\n\nfunction Store(props) {\n\n    if(!socket) {\n        socket = io(':3001');\n        socket.on('chat message', function(msg) {\n            $('#messages').append($('<li>').text(msg));\n        });\n    }\n\n    const user = 'mohammed' + Math.random(100).toFixed(2)\n    const [allChats] = React.useReducer(reducer , initState);\n\n    return (\n        <CTX.Provider value={{allChats, sendChatAction, user}}>\n            {props.children}\n        </CTX.Provider> \n    )\n}\n\nexport default Store\n "]},"metadata":{},"sourceType":"module"}